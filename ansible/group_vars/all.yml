---
# Variables shared among ALL HOSTS

################################################################
#################      ENVIRONMENT PARAMS      #################
################################################################
# Variable to use proxy with CLI
# Use of proxy with API is automatic with Ansible as long as http_proxy and https_proxy environment variables are set
use_proxy: no
#proxy:
#  host: http://localhost
#  port: 8080
#  user: "proxy_user"
#  password: "proxy_password"

################################################################
#################         TENANT PARAMS        #################
################################################################

# Variable to use CLI instead of API`
use_cli: no
# Variable to install CLI and db.json
install_cli: no

# Folder where CLI will be installed on target host
# Default is local folder where ansible commands are executed
cli_installation_folder: "."

# SWEAGLE host information
# if use_db_file is set to yes then db_file is used as source of connection info
use_db_file: no
#db_file: "/Users/dimitris/db.json"
db_file: "/POC/db.json"

# if use_db_file is set to no
# then sweagle_url,  sweagle_token and validate_certs are used as source of connection info
# and validate_certs is used to
sweagle_url: "https://testing.sweagle.com"
sweagle_token: "104e6b08-9bbf-4b66-a06a-XXX"
# Tells if SSL should not validate server certificate, put yes if self-signed certificate
ignore_ssl: no


################################################################
#################          API PARAMS          #################
################################################################

# Global variables to be used as default if no list variable provided
global:
  args: ""
  auto_approve: true
  cds: "samples-test"
  changeset_title: "ansible test"
  changeset_description: "this is dimitris test with ansible"
  exporter: "returnDataForNode"
  forIncoming: true
  forIncomingFailover: "ask"
  # forIncomingFailover is used only when forIncoming=true
  # forIncomingFailover defines if process should
  #  - fail when no incoming data is found if set to false (default)
  #  - try with last snapshot automatically when no pending data is found if set to true
  #  - ask user input to failover or not if when no pending data is found if set to "ask"
  format: "props"
  node_path: "samples-appli,environment,dev"
  snapshot:
    description: ""
    tag: ""
  #timeout: 180
  # timeout defines the URI call timeout for uplaodFile role
  # it can be defined at global or each list item level
  validator: "passwordChecker"

# These parameters are used for uploadDir role
paths: "/POC/inputs"
excludes:
recurse: true
patterns: "*.properties"
#ex: patterns: "*.properties,*.json"

# This list is used for uploadData role, you can put any value to overcome global values
upload_data_list:
  - { file_path: "/POC/inputs/dev.properties", node_path: "samples-appli,environment,dev" }
  - { file_path: "/POC/inputs/test.properties", node_path: "samples-appli,environment,test" }

# This list is used for getValidationStatus role, you can put any value to overcome global values
validation_status_cds_list:
  - { cds: "samples-dev", forIncoming: false }
  - { cds: "samples test" }

# This list is used for validate role, you can put any value to overcome global values
validate_cds_list:
  - { cds: "samples-dev", forIncoming: false, validator: "passwordChecker" }
  - { cds: "samples-dev", forIncoming: false, validator: "noEmptyValues" }
  - { cds: "samples-dev", forIncoming: false, validator: "noHTTP" }
  - { cds: "samples-test" }
  - { cds: "samples-test", validator: "noHTTP"  }

# This list is used for exportSnapshot role, you can put any value to overcome global values
snapshot_list:
  - { cds: "samples-dev", file_path: "/POC/outputs/dev.properties", args: "dev" }
  - { cds: "samples-dev", file_path: "/POC/outputs/dev.json", exporter: "all", args: "", format: "json" }
